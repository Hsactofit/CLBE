"""add form and form template tables

Revision ID: 5312079336a5
Revises: d6d59a279019
Create Date: 2025-07-31 15:31:53.212431

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5312079336a5"
down_revision: Union[str, Sequence[str], None] = "d6d59a279019"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "form_template",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "public_id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "ACTIVE",
                "DRAFT",
                "TOMBSTONED",
                name="formtemplatestatus",
                native_enum=False,
            ),
            server_default=sa.text("'ACTIVE'"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_form_template_public_id"), "form_template", ["public_id"], unique=True
    )
    op.create_table(
        "form_template_section",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "public_id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("page_number", sa.Integer(), nullable=True),
        sa.Column("form_template_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_template_id"],
            ["form_template.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_form_template_section_form_template_id"),
        "form_template_section",
        ["form_template_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_form_template_section_public_id"),
        "form_template_section",
        ["public_id"],
        unique=True,
    )
    op.create_table(
        "form",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "public_id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("form_template_id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_template_id"],
            ["form_template.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_form_public_id"), "form", ["public_id"], unique=True)
    op.create_table(
        "form_template_field",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("pdf_field_name", sa.String(length=255), nullable=True),
        sa.Column("dependency_expression", sa.String(length=255), nullable=True),
        sa.Column(
            "should_fill_on_form",
            sa.Boolean(),
            server_default=sa.text("true"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum(
                "TEXT",
                "NUMBER",
                "DATE",
                "BOOLEAN",
                "SELECT_ONE",
                "SELECT_MANY",
                "SIGNATURE",
                name="formtemplatefieldtypes",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column("alternative_text", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("field_metadata", sa.JSON(), nullable=True),
        sa.Column("minimum_length", sa.Integer(), nullable=True),
        sa.Column("maximum_length", sa.Integer(), nullable=True),
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["form_template_section.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_form_template_field_section_id"),
        "form_template_field",
        ["section_id"],
        unique=False,
    )
    op.create_table(
        "form_field_response",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "public_id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("form_id", sa.Integer(), nullable=False),
        sa.Column("form_template_field_id", sa.Integer(), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.Column(
            "role",
            sa.Enum(
                "USER", "ASSISTANT", name="formfieldresponserole", native_enum=False
            ),
            server_default=sa.text("'USER'"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["form.id"],
        ),
        sa.ForeignKeyConstraint(
            ["form_template_field_id"],
            ["form_template_field.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_form_field_response_public_id"),
        "form_field_response",
        ["public_id"],
        unique=True,
    )
    op.create_table(
        "form_template_field_option",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("key", sa.String(length=255), nullable=False),
        sa.Column("pdf_field_name", sa.String(length=255), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["field_id"],
            ["form_template_field.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_form_template_field_option_field_id"),
        "form_template_field_option",
        ["field_id"],
        unique=False,
    )
    op.add_column(
        "project",
        sa.Column(
            "completed", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
    )
    op.add_column("project", sa.Column("completed_at", sa.TIMESTAMP(), nullable=True))
    op.alter_column(
        "project",
        "type",
        existing_type=postgresql.ENUM(
            "FAMILY_BASED_GREENCARD",
            "CITIZENSHIP",
            "EMPLOYMENT_BASED_GREENCARD",
            name="projecttype",
        ),
        type_=sa.Enum(
            "FAMILY_BASED_GREENCARD",
            "CITIZENSHIP",
            "EMPLOYMENT_BASED_GREENCARD",
            name="projecttype",
            native_enum=False,
        ),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "project",
        "type",
        existing_type=sa.Enum(
            "FAMILY_BASED_GREENCARD",
            "CITIZENSHIP",
            "EMPLOYMENT_BASED_GREENCARD",
            name="projecttype",
            native_enum=False,
        ),
        type_=postgresql.ENUM(
            "FAMILY_BASED_GREENCARD",
            "CITIZENSHIP",
            "EMPLOYMENT_BASED_GREENCARD",
            name="projecttype",
        ),
        existing_nullable=False,
    )
    op.drop_column("project", "completed_at")
    op.drop_column("project", "completed")
    op.drop_index(
        op.f("ix_form_template_field_option_field_id"),
        table_name="form_template_field_option",
    )
    op.drop_table("form_template_field_option")
    op.drop_index(
        op.f("ix_form_field_response_public_id"), table_name="form_field_response"
    )
    op.drop_table("form_field_response")
    op.drop_index(
        op.f("ix_form_template_field_section_id"), table_name="form_template_field"
    )
    op.drop_table("form_template_field")
    op.drop_index(op.f("ix_form_public_id"), table_name="form")
    op.drop_table("form")
    op.drop_index(
        op.f("ix_form_template_section_public_id"), table_name="form_template_section"
    )
    op.drop_index(
        op.f("ix_form_template_section_form_template_id"),
        table_name="form_template_section",
    )
    op.drop_table("form_template_section")
    op.drop_index(op.f("ix_form_template_public_id"), table_name="form_template")
    op.drop_table("form_template")
    # ### end Alembic commands ###
