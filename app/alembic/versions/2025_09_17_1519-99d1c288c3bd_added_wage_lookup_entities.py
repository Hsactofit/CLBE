"""added wage lookup entities

Revision ID: 99d1c288c3bd
Revises: 90f0b66c16f3
Create Date: 2025-09-17 15:19:42.826912

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "99d1c288c3bd"
down_revision: Union[str, Sequence[str], None] = "90f0b66c16f3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "wage_area",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=15), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "wage_job",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=15), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "wage_area_job",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("area_id", sa.Integer(), nullable=False),
        sa.Column("job_id", sa.Integer(), nullable=False),
        sa.Column("wage_tier_1", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("wage_tier_2", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("wage_tier_3", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("wage_tier_4", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["area_id"],
            ["wage_area.id"],
        ),
        sa.ForeignKeyConstraint(
            ["job_id"],
            ["wage_job.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "area_id", "job_id", name="uq_wage_area_job_area_id_job_id"
        ),
    )
    op.create_table(
        "wage_zip_area",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("zip", sa.String(length=5), nullable=False),
        sa.Column("area_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["area_id"],
            ["wage_area.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("zip"),
        sa.UniqueConstraint("zip", "area_id", name="uq_wage_zip_area_zip_area_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("wage_zip_area")
    op.drop_table("wage_area_job")
    op.drop_table("wage_job")
    op.drop_table("wage_area")
    # ### end Alembic commands ###
